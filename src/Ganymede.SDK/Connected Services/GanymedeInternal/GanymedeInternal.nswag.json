{
  "openapi": "3.0.1",
  "info": {
    "title": "Bloxxon External API",
    "description": "The Kapilendo Crypto API offers:\r\n- Wealth Management as a Service \r\n- Retail Crypto Asset Wallet as a Service\r\n# Wealth Management as a Service \r\nCustomer are provided with the ability to onboard users to one of several ETF Portfolios, where depot and wealth management services are provided.\r\n# Retail Crypto Asset Wallet as a Service\r\nCustomer are provided with the ability to create blockchain wallets for users.\r\n",
    "contact": {
      "name": "Bloxxon AG",
      "url": "https://bloxxon.co",
      "email": "p.tasner@bloxxon.co"
    },
    "version": "v1",
    "x-logo": {
      "url": "/logo.png",
      "altText": "Bloxxon External API"
    }
  },
  "paths": {
    "/api/external/v1/customers": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Getting a list of customers from institution",
        "operationId": "GetCustomers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountDtoListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Creates a new customer inside the institution",
        "operationId": "CreateCustomer",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/search": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Searches for a customer by firstname lastname or email",
        "operationId": "QueryCustomers",
        "parameters": [
          {
            "name": "searchText",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "nullable": true
            }
          },
          {
            "name": "take",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "default": 100
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Getting a customer by Id",
        "operationId": "GetCustomer",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerAccountDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update customer inside the institution",
        "operationId": "UpdateCustomer",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "The customer ID",
            "schema": {
              "type": "string",
              "description": "The customer ID",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "CUstomer data to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerAccountDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerAccountDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCustomerAccountDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/kyc": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Saving KYC data for custodying customer wallets",
        "operationId": "SubmitCustomerKycData",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KycDataDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/KycDataDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/KycDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/electronic-security/{asset-id}": {
      "get": {
        "tags": [
          "Electronic Security"
        ],
        "summary": "Information regarding an asset",
        "operationId": "GetAssetInfo",
        "parameters": [
          {
            "name": "asset-id",
            "in": "path",
            "required": true,
            "description": "The id of the asset",
            "schema": {
              "type": "string",
              "description": "The id of the asset",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ElectronicSecurityBasicInfoDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/electronic-security/{asset-id}/trust-lines": {
      "post": {
        "tags": [
          "Electronic Security"
        ],
        "summary": "Allows for creating many trustlines in bulk",
        "operationId": "CreateTrustLines",
        "parameters": [
          {
            "name": "asset-id",
            "in": "path",
            "required": true,
            "description": "The asset to which the trustline is being created",
            "schema": {
              "type": "string",
              "description": "The asset to which the trustline is being created",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Request body containing the PIN and user ID pairs",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateTrustLineDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateTrustLineDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BulkCreateTrustLineDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkResultDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/request-funding": {
      "post": {
        "tags": [
          "Faucet"
        ],
        "summary": "Allows users to request funding for retail and issuer wallets",
        "operationId": "RequestWalletFunding",
        "requestBody": {
          "description": "List of issuer and retail wallet ids",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestFaucetFundingDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestFaucetFundingDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestFaucetFundingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WalletFundingResultsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds": {
      "get": {
        "tags": [
          "Issuer Wallet"
        ],
        "summary": "Returns a list of issuer wallet objects associated with the institution.",
        "operationId": "GetIssuerWalletSeeds",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuerWalletSeedDtoListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Issuer Wallet"
        ],
        "summary": "Generates a 24-word mnemonic seed for the institution, encrypts it with the given credentials. \r\nIssuer wallet seed id will be returned",
        "operationId": "CreateIssuerWalletSeed",
        "requestBody": {
          "description": "Name and credentials.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssuerWalletSeedDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssuerWalletSeedDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssuerWalletSeedDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuerWalletSeedDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}": {
      "put": {
        "tags": [
          "Issuer Wallet"
        ],
        "summary": "Derives a new private key from the 24-word mnemonic seed for the institution.\r\nReturns the id for the newly derived issuer wallet.",
        "operationId": "DeriveNewIssuerWallet",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeriveIssuerWalletFromSeedDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeriveIssuerWalletFromSeedDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeriveIssuerWalletFromSeedDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-seed-wallet-id}": {
      "delete": {
        "tags": [
          "Issuer Wallet"
        ],
        "summary": "Not implemented yet",
        "operationId": "DeleteIssuerWalletSeed",
        "parameters": [
          {
            "name": "issuer-seed-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuerWalletRecoveryKitFileDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/recovery": {
      "post": {
        "tags": [
          "Issuer Wallet"
        ],
        "summary": "Initiates recovery process in which the custodian delivers the passphrase to the institution in a secure way.",
        "operationId": "InitiateIssuerWalletPassphraseRecovery",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets": {
      "get": {
        "tags": [
          "Issuer Wallet"
        ],
        "summary": "Returns a list of issuer wallet derived from the given seed, includes the tokenized assets issued by the wallet",
        "operationId": "GetIssuerWallets",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuerWalletDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenzid-assets": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Initialize tokenized asset creation",
        "operationId": "InitializeTokenizedAssetCreation",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitTokenizedAssetCreationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InitTokenizedAssetCreationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InitTokenizedAssetCreationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenzid-assets/{tokenized-asset-id}": {
      "put": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Finalized tokenized asset creation",
        "operationId": "CreateTokenizedAsset",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenizedAssetDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Returns details about the given tokenized asset. Details include transfers, open opt-in requests and",
        "operationId": "GetTokenizedAssetDetails",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenizedAssetDetailsDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenzid-assets/{tokenized-asset-id}/transfer": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Send tokenized assets to retail wallets.\r\nReturns a list of transfer ids.",
        "operationId": "TransferTokenizedAssets",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuerWalletTokenizedAssetTransferDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuerWalletTokenizedAssetTransferDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssuerWalletTokenizedAssetTransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallets/{issuer-wallet-id}/fungible-assets/{tokenized-asset-id}/transfer": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Send fungible tokenized assets to retail wallets.\r\nReturns a list of transfer ids.",
        "operationId": "TransferFungibleAssets",
        "parameters": [
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuerWalletFungibleAssetTransferDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuerWalletFungibleAssetTransferDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IssuerWalletFungibleAssetTransferDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/lock": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Permanently locks issuer wallet ( won't be able to create new tokens anymore)",
        "operationId": "LockIssuerWallet",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenized-assets/{tokenized-asset-id}/authorize-opt-in": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Approve opt-in for retail wallet",
        "operationId": "AuthorizeOptIn",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleOptInAuthorizationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleOptInAuthorizationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleOptInAuthorizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenized-assets/{tokenized-asset-id}/revoke-opt-in": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Revokes opt-in as a result tokenized assets in the retail wallet will be frozen, if called after delivery",
        "operationId": "RevokeOptIn",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleOptInAuthorizationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleOptInAuthorizationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleOptInAuthorizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenized-assets/{tokenized-asset-id}/clawback-asset": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Clawback asset from an account",
        "operationId": "ClawbackAsset",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedAssetClawbackDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedAssetClawbackDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedAssetClawbackDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenized-assets/{tokenized-asset-id}/burn-asset": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Burn x amount of tokens",
        "operationId": "BurnAsset",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedAssetBurnDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedAssetBurnDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenizedAssetBurnDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/issuer-wallet-seeds/{issuer-wallet-seed-id}/issuer-wallets/{issuer-wallet-id}/tokenized-assets/{tokenized-asset-id}/metadata": {
      "post": {
        "tags": [
          "Tokenized Assets"
        ],
        "summary": "Build .toml file for token",
        "operationId": "BuildAndSubmitMetadaFile",
        "parameters": [
          {
            "name": "issuer-wallet-seed-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "issuer-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "tokenized-asset-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "metaDataFormData": {
                    "type": "string",
                    "description": "",
                    "nullable": true
                  },
                  "orgImageFile": {
                    "type": "string",
                    "description": "",
                    "format": "binary",
                    "nullable": true
                  },
                  "tokenImageFile": {
                    "type": "string",
                    "description": "",
                    "format": "binary",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "metaDataFormData": {
                  "style": "form"
                },
                "orgImageFile": {
                  "style": "form"
                },
                "tokenImageFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/model": {
      "get": {
        "tags": [
          "IssuerWallet"
        ],
        "operationId": "MissingModels",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissingModelsContainer"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/retail-wallets": {
      "get": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Returns a list of retail wallet object associated with the given customer id.",
        "operationId": "GetRetailWalletsDetails",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "Customer Id",
            "schema": {
              "type": "string",
              "description": "Customer Id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailWalletDtoListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Generates a 24-word mnemonic seed for the customer encrypts it with the given credentials. \r\nA list of retail wallet objects are being returned, which can be derived from the seed.",
        "operationId": "InitiateRetailWallet",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "Customer Id",
            "schema": {
              "type": "string",
              "description": "Customer Id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Credentials to access the mnemonic seed. Encryption key file can be left empty, if it's stored on the Custodian side.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailWalletDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/retail-wallets/{blockchain}": {
      "put": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Derives a new type of wallet for a customer, if the customer already has wallets.",
        "operationId": "DeriveRetailWallet",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "Customer Id",
            "schema": {
              "type": "string",
              "description": "Customer Id",
              "format": "uuid"
            }
          },
          {
            "name": "blockchain",
            "in": "path",
            "required": true,
            "description": "Blockchain for wallet",
            "schema": {
              "type": "integer",
              "description": "Blockchain for wallet",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Credentials to access the mnemonic seed. Encryption key file can be left empty, if it's stored on the Custodian side.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailWalletDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/retail-wallets/{retail-wallet-id}/opt-in": {
      "post": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Request to hold a certain tokenized asset in given retail wallet",
        "operationId": "OptInWithRetailWallet",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "retail-wallet-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailWalletOptInDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RetailWalletOptInDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RetailWalletOptInDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/retail-wallets/lock": {
      "put": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Freezes or unfreezes all customer retail wallets by locking access to the mnemonic seed",
        "operationId": "LockRetailWallets",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "",
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LockWalletsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LockWalletsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LockWalletsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/retail-wallets/check-passphrase": {
      "post": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Checks if the passphrase is correct for the given customer retail wallet",
        "operationId": "CheckRetailWalletPassphrase",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "Customer Id",
            "schema": {
              "type": "string",
              "description": "Customer Id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/retail-wallets/recovery": {
      "post": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Initiates retail wallet passphrase recovery",
        "operationId": "InitiateRetailWalletPassphraseRecovery",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "Customer Id",
            "schema": {
              "type": "string",
              "description": "Customer Id",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailWalletSeedRecoveryDtoApiResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Resets retail-wallet's encryption passphrase",
        "operationId": "RecoverRetailWalletSeedAccess",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "Customer Id",
            "schema": {
              "type": "string",
              "description": "Customer Id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetRetailWalletAccessCredentialsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetRetailWalletAccessCredentialsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetRetailWalletAccessCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/customers/{customer-id}/delete-retail-wallets": {
      "post": {
        "tags": [
          "Retail Wallet"
        ],
        "summary": "Generates and returns a PDF file containing the 24-word mnemonic seed for retail wallets.\r\nRemoves retail wallet seed from the custodian database.",
        "operationId": "DeleteRetailWallets",
        "parameters": [
          {
            "name": "customer-id",
            "in": "path",
            "required": true,
            "description": "Customer Id",
            "schema": {
              "type": "string",
              "description": "Customer Id",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "Credentials to access the mnemonic seed. Encryption key file can be left empty, if it's stored on the Custodian side.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetailWalletRecoveryKitFileDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/retail-wallets/external": {
      "get": {
        "tags": [
          "External Retail Wallet"
        ],
        "summary": "List of external wallets",
        "operationId": "GetExternalRetailWallet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalRetailWalletDtoListApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "External Retail Wallet"
        ],
        "operationId": "CreateExternalRetailWallet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExternalRetailWalletDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExternalRetailWalletDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ImportExternalRetailWalletDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get status of API",
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/external/v1/status/auth": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Returns the Users identity, if HMAC authentication worked",
        "operationId": "GetAuth",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedInstitutionDtoApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/ext/v1/create-trade-order": {
      "post": {
        "tags": [
          "Trading"
        ],
        "operationId": "CreateTradeOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtTradeOrderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtTradeOrderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ExtTradeOrderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/transactions/{days}": {
      "get": {
        "tags": [
          "Transaction"
        ],
        "operationId": "GetTransactions",
        "parameters": [
          {
            "name": "days",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionToShowDtoListApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/external/v1/cancel-transactions": {
      "post": {
        "tags": [
          "Transaction"
        ],
        "operationId": "CancelTransactions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransactionsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransactionsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransactionsDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Int32ApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountTypes": {
        "type": "string",
        "format": "int32",
        "enum": [
          "Unknown",
          "Person",
          "LegalEntity"
        ],
        "x-custom-enum": {
          "name": "AccountTypes",
          "enumObjects": [
            {
              "label": "Unknown",
              "value": 0
            },
            {
              "label": "Person",
              "value": 1
            },
            {
              "label": "LegalEntity",
              "value": 2
            }
          ]
        }
      },
      "RetailWalletAccessLevels": {
        "type": "string",
        "format": "int32",
        "enum": [
          "None",
          "Basic",
          "Full"
        ],
        "x-custom-enum": {
          "name": "RetailWalletAccessLevels",
          "enumObjects": [
            {
              "label": "None",
              "value": 0
            },
            {
              "label": "Basic",
              "value": 1
            },
            {
              "label": "Full",
              "value": 2
            }
          ]
        }
      },
      "CountryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "iso": {
            "type": "string",
            "nullable": true
          },
          "isoCode3": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CustomerAddressDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "streetNo": {
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "nullable": true
          },
          "town": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "$ref": "#/components/schemas/CountryDto"
          }
        }
      },
      "GenderTypes": {
        "type": "string",
        "format": "int32",
        "enum": [
          "NotSet",
          "Male",
          "Female",
          "Other"
        ],
        "x-custom-enum": {
          "name": "GenderTypes",
          "enumObjects": [
            {
              "label": "NotSet",
              "value": 0
            },
            {
              "label": "Male",
              "value": 1
            },
            {
              "label": "Female",
              "value": 2
            },
            {
              "label": "Other",
              "value": 3
            }
          ]
        }
      },
      "CustomerAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "institutionId": {
            "type": "string",
            "format": "uuid"
          },
          "institutionName": {
            "type": "string",
            "nullable": true
          },
          "salutation": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AccountTypes"
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "nullable": true
          },
          "lastname": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "walletAccess": {
            "$ref": "#/components/schemas/RetailWalletAccessLevels"
          },
          "address": {
            "$ref": "#/components/schemas/CustomerAddressDto"
          },
          "nationalityId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "nationalityIso": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderTypes"
          }
        }
      },
      "CustomerAccountDtoListApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerAccountDto"
            }
          }
        }
      },
      "CustomerCompanyDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email",
          "fullAddress",
          "name",
          "registerNumber"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255
          },
          "registerNumber": {
            "type": "string",
            "maxLength": 255
          },
          "fullAddress": {
            "type": "string",
            "maxLength": 255
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 64
          }
        }
      },
      "CreateCustomerAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "countryIso",
          "email",
          "firstname",
          "lastname",
          "postalCode",
          "street",
          "streetNo",
          "town",
          "type"
        ],
        "properties": {
          "salutation": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0,
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "lastname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "format": "tel",
            "maxLength": 64,
            "minLength": 0,
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AccountTypes"
          },
          "street": {
            "type": "string",
            "maxLength": 100
          },
          "streetNo": {
            "type": "string",
            "maxLength": 100
          },
          "postalCode": {
            "type": "string",
            "maxLength": 100
          },
          "town": {
            "type": "string",
            "maxLength": 100
          },
          "countryIso": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2
          },
          "company": {
            "$ref": "#/components/schemas/CustomerCompanyDetailDto"
          },
          "nationalityIso": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderTypes"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "minLength": 0
          }
        }
      },
      "GuidApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          }
        }
      },
      "CustomerAccountDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/CustomerAccountDto"
          }
        }
      },
      "UpdateCustomerAccountDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "countryIso",
          "firstname",
          "lastname",
          "postalCode",
          "street",
          "streetNo",
          "town",
          "type"
        ],
        "properties": {
          "salutation": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0,
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "lastname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "birthDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "format": "tel",
            "maxLength": 64,
            "minLength": 0,
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/AccountTypes"
          },
          "street": {
            "type": "string",
            "maxLength": 100
          },
          "streetNo": {
            "type": "string",
            "maxLength": 100
          },
          "postalCode": {
            "type": "string",
            "maxLength": 100
          },
          "town": {
            "type": "string",
            "maxLength": 100
          },
          "countryIso": {
            "type": "string",
            "maxLength": 2,
            "minLength": 2
          },
          "company": {
            "$ref": "#/components/schemas/CustomerCompanyDetailDto"
          },
          "nationalityIso": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderTypes"
          }
        }
      },
      "KycAddressDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "countryCodeIso2",
          "postalCode",
          "street",
          "streetNo",
          "town"
        ],
        "properties": {
          "street": {
            "type": "string",
            "maxLength": 100
          },
          "streetNo": {
            "type": "string",
            "maxLength": 100
          },
          "postalCode": {
            "type": "string",
            "maxLength": 100
          },
          "town": {
            "type": "string",
            "maxLength": 100
          },
          "countryCodeIso2": {
            "type": "string",
            "maxLength": 2
          }
        }
      },
      "KycDataDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "address",
          "dateOfBirth",
          "email",
          "eulaAgreed",
          "firstname",
          "highCorruptionIndex",
          "identVerified",
          "lastname",
          "nonPepPerson",
          "nonSanctionedCountry",
          "nonUsTaxPerson",
          "placeOfBirth"
        ],
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0,
            "nullable": true
          },
          "firstname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "lastname": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0
          },
          "placeOfBirth": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 64,
            "minLength": 0
          },
          "nonPepPerson": {
            "type": "boolean"
          },
          "highCorruptionIndex": {
            "type": "boolean"
          },
          "nonSanctionedCountry": {
            "type": "boolean"
          },
          "nonUsTaxPerson": {
            "type": "boolean"
          },
          "identVerified": {
            "type": "boolean"
          },
          "eulaAgreed": {
            "type": "boolean"
          },
          "address": {
            "$ref": "#/components/schemas/KycAddressDto"
          },
          "company": {
            "$ref": "#/components/schemas/CustomerCompanyDetailDto"
          },
          "nationalityIso": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/GenderTypes"
          }
        }
      },
      "BooleanApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "boolean",
            "readOnly": true
          }
        }
      },
      "ElectronicSecurityBasicInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "issuerWalletPubKey": {
            "type": "string",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ElectronicSecurityBasicInfoDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/ElectronicSecurityBasicInfoDto"
          }
        }
      },
      "CreateTrustLineInternalDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pin": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "BulkCreateTrustLineDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "trustLineData": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CreateTrustLineInternalDto"
            }
          }
        }
      },
      "BulkResultItemStatus": {
        "type": "string",
        "format": "int32",
        "enum": [
          "NotSet",
          "Ok",
          "Failed",
          "Duplicate"
        ],
        "x-custom-enum": {
          "name": "BulkResultItemStatus",
          "enumObjects": [
            {
              "label": "NotSet",
              "value": 0
            },
            {
              "label": "Ok",
              "value": 1
            },
            {
              "label": "Failed",
              "value": 10
            },
            {
              "label": "Duplicate",
              "value": 11
            }
          ]
        }
      },
      "BulkResultItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "requestId": {
            "type": "string",
            "format": "uuid"
          },
          "locationId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BulkResultItemStatus"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BulkResultDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/BulkResultItemDto"
            }
          }
        }
      },
      "BulkResultDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/BulkResultDto"
          }
        }
      },
      "RequestFaucetFundingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "retailWallets": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "issuerWallets": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "FaucetFundingResult": {
        "type": "string",
        "format": "int32",
        "enum": [
          "Initiated",
          "NotEligible",
          "Failed"
        ],
        "x-custom-enum": {
          "name": "FaucetFundingResult",
          "enumObjects": [
            {
              "label": "Initiated",
              "value": 1
            },
            {
              "label": "Failed",
              "value": -2
            },
            {
              "label": "NotEligible",
              "value": -1
            }
          ]
        }
      },
      "WalletFundingResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "walletId": {
            "type": "string",
            "format": "uuid"
          },
          "result": {
            "$ref": "#/components/schemas/FaucetFundingResult"
          }
        }
      },
      "WalletFundingResultsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "retailFundingResults": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WalletFundingResult"
            }
          },
          "issuerFundingResults": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/WalletFundingResult"
            }
          }
        }
      },
      "WalletFundingResultsDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/WalletFundingResultsDto"
          }
        }
      },
      "IssuerWalletRoles": {
        "type": "string",
        "format": "int32",
        "enum": [
          "Issuer",
          "Distributor"
        ],
        "x-custom-enum": {
          "name": "IssuerWalletRoles",
          "enumObjects": [
            {
              "label": "Issuer",
              "value": 1
            },
            {
              "label": "Distributor",
              "value": 2
            }
          ]
        }
      },
      "Blockchains": {
        "type": "string",
        "format": "int32",
        "enum": [
          "NotSet",
          "Bitcoin",
          "Ethereum",
          "Stellar",
          "Litecoin",
          "Polkadot",
          "Kusama",
          "Algorand",
          "Cosmos",
          "Terra",
          "Polymesh",
          "Binance",
          "Solana",
          "Cardano",
          "Polygon",
          "Avalanche"
        ],
        "x-custom-enum": {
          "name": "Blockchains",
          "enumObjects": [
            {
              "label": "NotSet",
              "value": 0
            },
            {
              "label": "Bitcoin",
              "value": 1
            },
            {
              "label": "Ethereum",
              "value": 2
            },
            {
              "label": "Stellar",
              "value": 3
            },
            {
              "label": "Litecoin",
              "value": 4
            },
            {
              "label": "Polkadot",
              "value": 5
            },
            {
              "label": "Kusama",
              "value": 6
            },
            {
              "label": "Algorand",
              "value": 7
            },
            {
              "label": "Cosmos",
              "value": 8
            },
            {
              "label": "Terra",
              "value": 9
            },
            {
              "label": "Polymesh",
              "value": 10
            },
            {
              "label": "Binance",
              "value": 11
            },
            {
              "label": "Solana",
              "value": 12
            },
            {
              "label": "Cardano",
              "value": 13
            },
            {
              "label": "Polygon",
              "value": 14
            },
            {
              "label": "Avalanche",
              "value": 15
            }
          ]
        }
      },
      "DecimalBalanceAmount": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "free": {
            "type": "number",
            "format": "double"
          },
          "locked": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BalancesInDecimalDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nativeBalance": {
            "$ref": "#/components/schemas/DecimalBalanceAmount"
          },
          "nativeFreeDecimalBalanceString": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "nativeLockedDecimalBalanceString": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          },
          "nonNativeBalances": {
            "type": "object",
            "nullable": true,
            "additionalProperties": {
              "type": "number",
              "format": "double"
            }
          },
          "nonNativeBalancesString": {
            "type": "object",
            "readOnly": true,
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ReviewDecision": {
        "type": "string",
        "format": "int32",
        "enum": [
          "Pending",
          "Approved",
          "Rejected"
        ],
        "x-custom-enum": {
          "name": "ReviewDecision",
          "enumObjects": [
            {
              "label": "Pending",
              "value": 0
            },
            {
              "label": "Approved",
              "value": 1
            },
            {
              "label": "Rejected",
              "value": 2
            }
          ]
        }
      },
      "TokenizedAssetDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "assetId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "totalSupply": {
            "type": "integer",
            "format": "int64"
          },
          "decimals": {
            "type": "integer",
            "format": "int32"
          },
          "enableFreeze": {
            "type": "boolean"
          },
          "enableClawback": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "metaData": {
            "type": "string",
            "nullable": true
          },
          "issuerAddress": {
            "type": "string",
            "nullable": true
          },
          "distributionAddress": {
            "type": "string",
            "nullable": true
          },
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "reviewDecision": {
            "$ref": "#/components/schemas/ReviewDecision"
          },
          "reviewedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reviewer": {
            "type": "string",
            "nullable": true
          },
          "issuingMemo": {
            "type": "string",
            "nullable": true
          },
          "isFungible": {
            "type": "boolean"
          }
        }
      },
      "IssuerWalletDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "issuerWalletSeedId": {
            "type": "string",
            "format": "uuid"
          },
          "role": {
            "$ref": "#/components/schemas/IssuerWalletRoles"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "publicAddress": {
            "type": "string",
            "nullable": true
          },
          "accountIndex": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "$ref": "#/components/schemas/BalancesInDecimalDto"
          },
          "tokenizedAssets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TokenizedAssetDto"
            }
          },
          "seedLockStatus": {
            "type": "boolean"
          },
          "nativeCryptoAssetSymbol": {
            "type": "string",
            "nullable": true
          },
          "nativeCryptoAssetId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "IssuerWalletSeedDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createdDt": {
            "type": "string",
            "format": "date-time"
          },
          "wallets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IssuerWalletDto"
            }
          }
        }
      },
      "IssuerWalletSeedDtoListApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IssuerWalletSeedDto"
            }
          }
        }
      },
      "SimpleAccessCredentialsDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "passphrase"
        ],
        "properties": {
          "passphrase": {
            "type": "string"
          },
          "keyFileContent": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateIssuerWalletSeedDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          }
        }
      },
      "IssuerWalletSeedDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/IssuerWalletSeedDto"
          }
        }
      },
      "DeriveIssuerWalletFromSeedDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "accountIndex",
          "blockchain",
          "role"
        ],
        "properties": {
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "accountIndex": {
            "type": "integer",
            "format": "int32",
            "maximum": 1024.0,
            "minimum": 0.0
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          },
          "role": {
            "$ref": "#/components/schemas/IssuerWalletRoles"
          }
        }
      },
      "IssuerWalletRecoveryKitFileDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IssuerWalletRecoveryKitFileDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/IssuerWalletRecoveryKitFileDto"
          }
        }
      },
      "EmptyResult": {
        "type": "object",
        "additionalProperties": false
      },
      "IssuerWalletDtoListApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/IssuerWalletDto"
            }
          }
        }
      },
      "InitTokenizedAssetCreationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "totalSupply": {
            "type": "integer",
            "format": "int64"
          },
          "decimals": {
            "type": "integer",
            "format": "int32"
          },
          "enableFreeze": {
            "type": "boolean"
          },
          "enableClawback": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "issuingMemo": {
            "type": "string",
            "nullable": true
          },
          "distributorWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "isFungible": {
            "type": "boolean"
          }
        }
      },
      "TokenizedAssetDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/TokenizedAssetDto"
          }
        }
      },
      "WalletTransactionStatus": {
        "type": "string",
        "format": "int32",
        "enum": [
          "New",
          "Pending",
          "Rejected",
          "Approved",
          "Sent",
          "Successful",
          "Failed",
          "TimedOut",
          "FailedOnBlockChain"
        ],
        "x-custom-enum": {
          "name": "WalletTransactionStatus",
          "enumObjects": [
            {
              "label": "New",
              "value": 0
            },
            {
              "label": "Pending",
              "value": 1
            },
            {
              "label": "Rejected",
              "value": 2
            },
            {
              "label": "Approved",
              "value": 3
            },
            {
              "label": "Sent",
              "value": 4
            },
            {
              "label": "Successful",
              "value": 5
            },
            {
              "label": "Failed",
              "value": 6
            },
            {
              "label": "TimedOut",
              "value": 7
            },
            {
              "label": "FailedOnBlockChain",
              "value": 8
            }
          ]
        }
      },
      "TokenizedAssetTransferDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "receiverRetailWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "$ref": "#/components/schemas/WalletTransactionStatus"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "txId": {
            "type": "string",
            "nullable": true
          },
          "fromAddress": {
            "type": "string",
            "nullable": true
          },
          "toAddress": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "string",
            "nullable": true
          },
          "tokenizedAsset": {
            "$ref": "#/components/schemas/TokenizedAssetDto"
          }
        }
      },
      "TransactionActions": {
        "type": "string",
        "format": "int32",
        "enum": [
          "TxNative",
          "TxAsset",
          "IssueAsset",
          "FreezeAsset",
          "ClawbackAssets",
          "OptIn",
          "AuthOptIn",
          "LockAccount",
          "Stake",
          "Unstake",
          "WithdrawRewards",
          "IssueFungibleAsset",
          "TxFungibleAsset"
        ],
        "x-custom-enum": {
          "name": "TransactionActions",
          "enumObjects": [
            {
              "label": "TxNative",
              "value": 1
            },
            {
              "label": "TxAsset",
              "value": 2
            },
            {
              "label": "IssueAsset",
              "value": 3
            },
            {
              "label": "FreezeAsset",
              "value": 4
            },
            {
              "label": "ClawbackAssets",
              "value": 5
            },
            {
              "label": "OptIn",
              "value": 6
            },
            {
              "label": "AuthOptIn",
              "value": 7
            },
            {
              "label": "LockAccount",
              "value": 8
            },
            {
              "label": "Stake",
              "value": 9
            },
            {
              "label": "Unstake",
              "value": 10
            },
            {
              "label": "WithdrawRewards",
              "value": 11
            },
            {
              "label": "IssueFungibleAsset",
              "value": 12
            },
            {
              "label": "TxFungibleAsset",
              "value": 13
            }
          ]
        }
      },
      "TransactionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "txAction": {
            "$ref": "#/components/schemas/TransactionActions"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "txId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "OptInStatus": {
        "type": "string",
        "format": "int32",
        "enum": [
          "New",
          "Sent",
          "Failed",
          "Rejected",
          "Approved",
          "Revoked",
          "AuthorizationFailed"
        ],
        "x-custom-enum": {
          "name": "OptInStatus",
          "enumObjects": [
            {
              "label": "New",
              "value": 0
            },
            {
              "label": "Sent",
              "value": 1
            },
            {
              "label": "Failed",
              "value": 2
            },
            {
              "label": "Rejected",
              "value": 3
            },
            {
              "label": "Approved",
              "value": 4
            },
            {
              "label": "Revoked",
              "value": 5
            },
            {
              "label": "AuthorizationFailed",
              "value": 6
            }
          ]
        }
      },
      "TokenizedAssetOptInDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "txIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransactionDto"
            }
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "retailWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "$ref": "#/components/schemas/OptInStatus"
          }
        }
      },
      "TokenizedAssetDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "assetId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "totalSupply": {
            "type": "integer",
            "format": "int64"
          },
          "decimals": {
            "type": "integer",
            "format": "int32"
          },
          "enableFreeze": {
            "type": "boolean"
          },
          "enableClawback": {
            "type": "boolean"
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "metaData": {
            "type": "string",
            "nullable": true
          },
          "issuerAddress": {
            "type": "string",
            "nullable": true
          },
          "distributionAddress": {
            "type": "string",
            "nullable": true
          },
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "reviewDecision": {
            "$ref": "#/components/schemas/ReviewDecision"
          },
          "reviewedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reviewer": {
            "type": "string",
            "nullable": true
          },
          "issuingMemo": {
            "type": "string",
            "nullable": true
          },
          "isFungible": {
            "type": "boolean"
          },
          "transfers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TokenizedAssetTransferDto"
            }
          },
          "optIns": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TokenizedAssetOptInDto"
            }
          },
          "metaDataUrl": {
            "type": "string",
            "readOnly": true,
            "nullable": true
          }
        }
      },
      "TokenizedAssetDetailsDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/TokenizedAssetDetailsDto"
          }
        }
      },
      "TokenizedAssetToRetailWallet": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "retailWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IssuerWalletTokenizedAssetTransferDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transfers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TokenizedAssetToRetailWallet"
            }
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          }
        }
      },
      "TokenizedAssetToExternalRetailWallet": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "externalRetailWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "IssuerWalletFungibleAssetTransferDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transfers": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TokenizedAssetToExternalRetailWallet"
            }
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          }
        }
      },
      "CustomerRetailWalletDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "customerId": {
            "type": "string",
            "format": "uuid"
          },
          "retailWalletId": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "ToggleOptInAuthorizationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          },
          "customerRetailWalletIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomerRetailWalletDto"
            }
          }
        }
      },
      "TokenizedAssetClawbackTransfer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "retailWalletId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TokenizedAssetClawbackDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "clawbacks": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TokenizedAssetClawbackTransfer"
            }
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          }
        }
      },
      "TokenizedAssetBurnDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          }
        }
      },
      "MetadataOrganizationDocumentation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "dba": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MetadataPrincipal": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MetadataCurrency": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateMetadataFileDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "documentation": {
            "$ref": "#/components/schemas/MetadataOrganizationDocumentation"
          },
          "principals": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MetadataPrincipal"
            }
          },
          "currency": {
            "$ref": "#/components/schemas/MetadataCurrency"
          },
          "subDomain": {
            "type": "string",
            "nullable": true
          },
          "orgLogoBytes": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "tokenLogoBytes": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          }
        }
      },
      "MissingModelsContainer": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "metadataFile": {
            "$ref": "#/components/schemas/CreateMetadataFileDto"
          }
        }
      },
      "RetailWalletDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "publicAddress": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "$ref": "#/components/schemas/BalancesInDecimalDto"
          },
          "seedLockStatus": {
            "type": "boolean"
          },
          "retailWalletSeedId": {
            "type": "string",
            "format": "uuid"
          },
          "accountId": {
            "type": "string",
            "readOnly": true,
            "format": "uuid"
          },
          "created": {
            "type": "string",
            "readOnly": true,
            "format": "date-time"
          },
          "transfers": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TokenizedAssetTransferDto"
            }
          }
        }
      },
      "RetailWalletDtoListApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RetailWalletDto"
            }
          }
        }
      },
      "RetailWalletDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/RetailWalletDto"
          }
        }
      },
      "RetailWalletOptInDto": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "credentials",
          "tokenizedAssetId"
        ],
        "properties": {
          "tokenizedAssetId": {
            "type": "string",
            "format": "uuid"
          },
          "credentials": {
            "$ref": "#/components/schemas/SimpleAccessCredentialsDto"
          }
        }
      },
      "LockWalletsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "lock": {
            "type": "boolean"
          }
        }
      },
      "RetailWalletSeedRecoveryDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "institutionId": {
            "type": "string",
            "format": "uuid"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "recoveryKey": {
            "type": "string",
            "nullable": true
          },
          "retailWalletSeedId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "closedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "RetailWalletSeedRecoveryDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/RetailWalletSeedRecoveryDto"
          }
        }
      },
      "ResetRetailWalletAccessCredentialsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "recoveryKey": {
            "type": "string",
            "nullable": true
          },
          "passphrase": {
            "type": "string",
            "nullable": true
          },
          "keyFileContent": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RetailWalletRecoveryKitFileDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RetailWalletRecoveryKitFileDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/RetailWalletRecoveryKitFileDto"
          }
        }
      },
      "ExternalRetailWalletDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "publicAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExternalRetailWalletDtoListApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExternalRetailWalletDto"
            }
          }
        }
      },
      "CreateExternalRetailWalletDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "publicAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nativeCryptoAssetId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        }
      },
      "ImportExternalRetailWalletDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "wallets": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CreateExternalRetailWalletDto"
            }
          }
        }
      },
      "Products": {
        "type": "string",
        "format": "int32",
        "enum": [
          "RetailWallet",
          "Tokenization"
        ],
        "x-custom-enum": {
          "name": "Products",
          "enumObjects": [
            {
              "label": "RetailWallet",
              "value": 101
            },
            {
              "label": "Tokenization",
              "value": 103
            }
          ]
        }
      },
      "AuthenticatedInstitutionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "institutionName": {
            "type": "string",
            "nullable": true
          },
          "productAccess": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Products"
            }
          },
          "userName": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuthenticatedInstitutionDtoApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "$ref": "#/components/schemas/AuthenticatedInstitutionDto"
          }
        }
      },
      "ExtTradeOrderDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "event": {
            "type": "string",
            "nullable": true
          },
          "trade_id": {
            "type": "string",
            "format": "uuid"
          },
          "order_id": {
            "type": "string",
            "nullable": true
          },
          "client_order_id": {
            "type": "string",
            "nullable": true
          },
          "client_order_id_1": {
            "type": "string",
            "nullable": true
          },
          "client_order_id_2": {
            "type": "string",
            "nullable": true
          },
          "side": {
            "type": "string",
            "nullable": true
          },
          "order_type": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "instrument": {
            "type": "string",
            "nullable": true
          },
          "confirmed_price": {
            "type": "number",
            "format": "double"
          },
          "executed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "total_amount": {
            "type": "number",
            "format": "double"
          },
          "order_status": {
            "type": "string",
            "nullable": true
          },
          "seq_no": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WalletTypes": {
        "type": "string",
        "format": "int32",
        "enum": [
          "Institutional",
          "Retail",
          "Issuer",
          "Faucet"
        ],
        "x-custom-enum": {
          "name": "WalletTypes",
          "enumObjects": [
            {
              "label": "Institutional",
              "value": 1
            },
            {
              "label": "Retail",
              "value": 2
            },
            {
              "label": "Issuer",
              "value": 3
            },
            {
              "label": "Faucet",
              "value": 4
            }
          ]
        }
      },
      "TxStatus": {
        "type": "string",
        "format": "int32",
        "enum": [
          "New",
          "Successful",
          "Retrying",
          "Failed",
          "Canceled"
        ],
        "x-custom-enum": {
          "name": "TxStatus",
          "enumObjects": [
            {
              "label": "New",
              "value": 1
            },
            {
              "label": "Successful",
              "value": 2
            },
            {
              "label": "Canceled",
              "value": -3
            },
            {
              "label": "Failed",
              "value": -2
            },
            {
              "label": "Retrying",
              "value": -1
            }
          ]
        }
      },
      "TransactionToShowDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "institutionId": {
            "type": "string",
            "format": "uuid"
          },
          "blockchain": {
            "$ref": "#/components/schemas/Blockchains"
          },
          "sourceWalletType": {
            "$ref": "#/components/schemas/WalletTypes"
          },
          "action": {
            "$ref": "#/components/schemas/TransactionActions"
          },
          "txBody": {
            "type": "string",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/TxStatus"
          },
          "retryCounter": {
            "type": "integer",
            "format": "int32"
          },
          "txId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "cryptoAssetName": {
            "type": "string",
            "nullable": true
          },
          "cryptoAssetSymbol": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TransactionToShowDtoListApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransactionToShowDto"
            }
          }
        }
      },
      "CancelTransactionsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactionIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "Int32ApiResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "errorMessageCodes": {
            "type": "array",
            "readOnly": true,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "data": {
            "type": "integer",
            "readOnly": true,
            "format": "int32"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Wealth Management",
      "description": "Wealth management services provide institution the ability to onbaord their customer for one of several ETF portfolios. Customers receive a depot where the ETF securities are stored, as well as quarterly reporting and daily depot performance data. "
    }
  ]
}